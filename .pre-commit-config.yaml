---
repos:
  # Custom hook to read version and set strictness level
  - repo: local
    hooks:
      - id: version-based-strictness
        name: Version-based Strictness Checker
        entry: python scripts/precommit_version_checker.py
        language: python
        stages: [commit]
        always_run: true

  # Ruff - Fast Python linter and formatter (always enabled)
  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.3.0
    hooks:
      - id: ruff
        args: [--fix]
      - id: ruff-format

  # Black - Uncompromising Python code formatter (always enabled)
  - repo: https://github.com/psf/black
    rev: 24.2.0
    hooks:
      - id: black
        language_version: python3
        args: [--line-length=100]

  # MyPy - Static type checker (conditional based on version)
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.8.0
    hooks:
      - id: mypy
        args: [--ignore-missing-imports]
        # This will be conditionally enabled by our version checker

  # Bandit - Security linter (always enabled)
  - repo: https://github.com/PyCQA/bandit
    rev: 1.7.5
    hooks:
      - id: bandit
        args: [-r, src/]
        exclude: ^tests/

  # Pydocstyle - Docstring style checker (conditional based on version)
  - repo: https://github.com/pycqa/pydocstyle
    rev: 6.3.0
    hooks:
      - id: pydocstyle
        args: [--convention=google]
        # This will be conditionally enabled by our version checker

  # Prettier - Code formatter for various file types (always enabled)
  - repo: https://github.com/pre-commit/mirrors-prettier
    rev: v3.1.0
    hooks:
      - id: prettier
        types_or:
          [javascript, jsx, ts, tsx, json, css, scss, html, yaml, markdown, mdx]

  # Pre-commit hooks - Basic file hygiene (always enabled)
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: trailing-whitespace
      - id: end-of-file-fixer
      - id: check-yaml
      - id: check-added-large-files
      - id: check-merge-conflict
      - id: check-case-conflict
      - id: check-json
      - id: check-toml
      - id: debug-statements
      - id: name-tests-test
      - id: requirements-txt-fixer
      - id: fix-byte-order-marker

  # ShellCheck - Shell script linter (always enabled)
  - repo: https://github.com/shellcheck-py/shellcheck-py
    rev: v0.9.0.5
    hooks:
      - id: shellcheck
        args: [--severity=warning]

  # Markdown linting (conditional based on version)
  - repo: https://github.com/igorshubovych/markdownlint-cli
    rev: v0.39.0
    hooks:
      - id: markdownlint
        args: [--fix]
        # This will be conditionally enabled by our version checker

  # YAML linting (always enabled)
  - repo: https://github.com/adrienverge/yamllint
    rev: v1.35.1
    hooks:
      - id: yamllint
        args: [--format, parsable, --strict]

  # Git hooks for commit message format (always enabled)
  - repo: https://github.com/alessandrojcm/commitlint-pre-commit-hook
    rev: v9.5.0
    hooks:
      - id: commitlint
        stages: [commit-msg]
        additional_dependencies: ["@commitlint/config-conventional"]
